import express from 'express';
import { ConversationsController } from '../controllers/conversationsController';
import { authenticateToken } from '../middleware/auth';
import requireConversationParticipant from '../middleware/requireConversationParticipant';

const router = express.Router();

// TÃ¼m route'lar authentication gerektirir
router.use(authenticateToken);

// POST /conversations - KonuÅŸma oluÅŸtur veya getir
router.post('/', ConversationsController.createOrGetConversation);

// POST /conversations/from-listing - Ä°lan iÃ§in konuÅŸma oluÅŸtur
router.post('/from-listing', ConversationsController.createConversationFromListing);

// GET /conversations - KullanÄ±cÄ±nÄ±n konuÅŸmalarÄ±nÄ± listele (zaten user bazlÄ± filtreli)
router.get('/', ConversationsController.getUserConversations);

// ğŸ”’ Participant kontrolÃ¼ gereken route'lar
// GET /conversations/:id/messages - KonuÅŸmanÄ±n mesajlarÄ±
router.get('/:id/messages', requireConversationParticipant, ConversationsController.getConversationMessages);

// POST /conversations/:id/messages - Mesaj gÃ¶nder
router.post('/:id/messages', requireConversationParticipant, ConversationsController.sendMessage);

// PUT /conversations/:id/read - KonuÅŸmayÄ± okundu iÅŸaretle
router.put('/:id/read', requireConversationParticipant, ConversationsController.markAsRead);

// DELETE /conversations/:id - KonuÅŸmayÄ± sil (tek taraflÄ±)
router.delete('/:id', requireConversationParticipant, ConversationsController.deleteConversation);

export default router;
